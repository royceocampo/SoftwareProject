package gui;

import org.eclipse.swt.SWT;
import org.eclipse.swt.events.SelectionAdapter;
import org.eclipse.swt.events.SelectionEvent;
import org.eclipse.swt.graphics.Point;
import org.eclipse.swt.widgets.Button;
import org.eclipse.swt.widgets.Combo;
import org.eclipse.swt.widgets.Display;
import org.eclipse.swt.widgets.Label;
import org.eclipse.swt.widgets.MessageBox;
import org.eclipse.swt.widgets.Shell;
import org.eclipse.swt.widgets.Spinner;
import org.eclipse.swt.widgets.TableItem;
import org.eclipse.swt.widgets.Text;
import org.eclipse.wb.swt.SWTResourceManager;

import classes.ProductManager;
import managers.Product;

public class EditProduct {

	protected Shell shlEditProduct;
	
	public static Text txtProdName;
	public static Text txtBrand;
	public static Text txtPackaging;
	public static Combo cmbCategory;
	public static Combo cmbSubtype;
	public static Spinner spinPrice;

	/**
	 * Launch the application.
	 * @param args
	 */
	public static void main(String[] args) {
		try {
			EditProduct window = new EditProduct();
			window.open();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	/**
	 * Open the window.
	 */
	public void open() {
		Display display = Display.getDefault();
		createContents();
		shlEditProduct.open();
		shlEditProduct.layout();
		while (!shlEditProduct.isDisposed()) {
			if (!display.readAndDispatch()) {
				display.sleep();
			}
		}
	}

	/**
	 * Create contents of the window.
	 */
	protected void createContents() {
		shlEditProduct = new Shell();
		shlEditProduct.setMinimumSize(new Point(200, 50));
		shlEditProduct.setBackground(SWTResourceManager.getColor(SWT.COLOR_INFO_BACKGROUND));
		shlEditProduct.setSize(405, 300);
		shlEditProduct.setText("Rare Global Food Trading Corp. Add Product");
		
		Button buttonSubmit = new Button(shlEditProduct, SWT.NONE);
		
		buttonSubmit.setText("Submit");
		buttonSubmit.setForeground(SWTResourceManager.getColor(SWT.COLOR_LIST_SELECTION_TEXT));
		buttonSubmit.setFont(SWTResourceManager.getFont("Segoe UI", 11, SWT.NORMAL));
		buttonSubmit.setBounds(126, 214, 120, 37);
		
		Label lblProductName = new Label(shlEditProduct, SWT.NONE);
		lblProductName.setFont(SWTResourceManager.getFont("Segoe UI", 12, SWT.NORMAL));
		lblProductName.setBackground(SWTResourceManager.getColor(SWT.COLOR_INFO_BACKGROUND));
		lblProductName.setBounds(10, 24, 110, 26);
		lblProductName.setText("Product Name:");
		
		Label lblCategory = new Label(shlEditProduct, SWT.NONE);
		lblCategory.setText("Category:");
		lblCategory.setFont(SWTResourceManager.getFont("Segoe UI", 12, SWT.NORMAL));
		lblCategory.setBackground(SWTResourceManager.getColor(SWT.COLOR_INFO_BACKGROUND));
		lblCategory.setBounds(46, 56, 71, 26);
		
		Label lblSubtype = new Label(shlEditProduct, SWT.NONE);
		lblSubtype.setText("Subtype:");
		lblSubtype.setFont(SWTResourceManager.getFont("Segoe UI", 12, SWT.NORMAL));
		lblSubtype.setBackground(SWTResourceManager.getColor(SWT.COLOR_INFO_BACKGROUND));
		lblSubtype.setBounds(46, 88, 60, 26);
		
		Label lblBrand = new Label(shlEditProduct, SWT.NONE);
		lblBrand.setText("Brand:");
		lblBrand.setFont(SWTResourceManager.getFont("Segoe UI", 12, SWT.NORMAL));
		lblBrand.setBackground(SWTResourceManager.getColor(SWT.COLOR_INFO_BACKGROUND));
		lblBrand.setBounds(60, 120, 60, 26);
		
		Label lblPackaging = new Label(shlEditProduct, SWT.NONE);
		lblPackaging.setText("Packaging:");
		lblPackaging.setFont(SWTResourceManager.getFont("Segoe UI", 12, SWT.NORMAL));
		lblPackaging.setBackground(SWTResourceManager.getColor(SWT.COLOR_INFO_BACKGROUND));
		lblPackaging.setBounds(31, 152, 79, 26);
		
		Label lblPrice = new Label(shlEditProduct, SWT.NONE);
		lblPrice.setText("Price:");
		lblPrice.setFont(SWTResourceManager.getFont("Segoe UI", 12, SWT.NORMAL));
		lblPrice.setBackground(SWTResourceManager.getColor(SWT.COLOR_INFO_BACKGROUND));
		lblPrice.setBounds(60, 184, 42, 26);
		
		txtProdName = new Text(shlEditProduct, SWT.BORDER);
		txtProdName.setBounds(126, 26, 120, 26);
		
		txtBrand = new Text(shlEditProduct, SWT.BORDER);
		txtBrand.setBounds(126, 120, 120, 26);
		
		txtPackaging = new Text(shlEditProduct, SWT.BORDER);
		txtPackaging.setBounds(126, 152, 120, 26);
		
		Spinner spinPrice = new Spinner(shlEditProduct, SWT.BORDER);
		spinPrice.setMaximum(10000);
		spinPrice.setBounds(126, 186, 120, 22);
		
		Combo cmbCategory = new Combo(shlEditProduct, SWT.NONE);
		cmbCategory.setItems(new String[] {"Meat", "Seafood"});
		cmbCategory.setBounds(126, 56, 120, 23);
		
		
		
		Combo cmbSubtype = new Combo(shlEditProduct, SWT.NONE);
		cmbSubtype.setItems(new String[] {"AA", "AB", "AC", "AD"});
		cmbSubtype.setBounds(126, 91, 120, 23);
		
		Label lblErrProdName = new Label(shlEditProduct, SWT.NONE);
		lblErrProdName.setBackground(SWTResourceManager.getColor(SWT.COLOR_INFO_BACKGROUND));
		lblErrProdName.setFont(SWTResourceManager.getFont("Segoe UI", 9, SWT.NORMAL));
		lblErrProdName.setForeground(SWTResourceManager.getColor(SWT.COLOR_INFO_BACKGROUND));
		lblErrProdName.setBounds(252, 29, 110, 15);
		lblErrProdName.setText("This field is required.");
//		lblErrProdName.setForeground(SWTResourceManager.getColor(SWT.COLOR_RED));     -> visible when error

		
		Label lblErrCat = new Label(shlEditProduct, SWT.NONE);
		lblErrCat.setForeground(SWTResourceManager.getColor(SWT.COLOR_INFO_BACKGROUND));
		lblErrCat.setBackground(SWTResourceManager.getColor(SWT.COLOR_INFO_BACKGROUND));
		lblErrCat.setBounds(252, 61, 110, 15);
		lblErrCat.setText("This field is required.");
		
		Label lblErrSub = new Label(shlEditProduct, SWT.NONE);
		lblErrSub.setBackground(SWTResourceManager.getColor(SWT.COLOR_INFO_BACKGROUND));
		lblErrSub.setForeground(SWTResourceManager.getColor(SWT.COLOR_INFO_BACKGROUND));
		lblErrSub.setBounds(252, 93, 110, 15);
		lblErrSub.setText("This field is required.");
		
		Label lblErrPri = new Label(shlEditProduct, SWT.NONE);
		lblErrPri.setForeground(SWTResourceManager.getColor(SWT.COLOR_INFO_BACKGROUND));
		lblErrPri.setBackground(SWTResourceManager.getColor(SWT.COLOR_INFO_BACKGROUND));
		lblErrPri.setBounds(252, 189, 110, 15);
		lblErrPri.setText("This field is required.");
		
		int idx = ProductManage.getIndex();
		TableItem item = ProductManage.getItem();
		TableItem[] tblItms = ProductManage.getTblItems();
		String prodStr = tblItms[idx].getText(0).toString();
//		System.out.println("Index: "+idx);
		System.out.println("Product ID: "+prodStr);
		
//		txtProdName.setText(ProductManage.getIndex());
		cmbCategory.addSelectionListener(new SelectionAdapter(){
			public void widgetSelected(SelectionEvent e){
				if (cmbCategory.getText().equals("Meat")){
					String newItems[] = { "Pork", "Beef", "Poultry", "Japanese Wagyu",
										"Cuts"};
					cmbSubtype.setItems(newItems);
					cmbSubtype.setEnabled(true);
				}
				else if (cmbCategory.getText().equals("Seafood")){
					String newItems[] = { "Black Tiger", "Shrimps", "Nobashi", "Japanese Wagyu",
					"Norwegian Salmon", "Squid/Octopus", "Tuna", "Cream Dory", "Fish (Whole, Fillet, Steak)",
					"Scallops and Shellfish"};
					cmbSubtype.setItems(newItems);
					cmbSubtype.setEnabled(true);
				}
				else{
					cmbSubtype.add(" ");
					cmbSubtype.setText(" ");
				}
				
			}
		});
		
		buttonSubmit.addSelectionListener(new SelectionAdapter() {
			@Override
			public void widgetSelected(SelectionEvent e) {
				lblErrProdName.setForeground(SWTResourceManager.getColor(SWT.COLOR_INFO_BACKGROUND));
				lblErrCat.setForeground(SWTResourceManager.getColor(SWT.COLOR_INFO_BACKGROUND));
				lblErrSub.setForeground(SWTResourceManager.getColor(SWT.COLOR_INFO_BACKGROUND));
				lblErrPri.setForeground(SWTResourceManager.getColor(SWT.COLOR_INFO_BACKGROUND));
				String strProdName = txtProdName.getText();
				String strCategory = cmbCategory.getText();
				String strSubtype = cmbSubtype.getText();
				String strBrand = txtBrand.getText();
				String strPackaging = txtPackaging.getText();
				float fPrice = (float)spinPrice.getSelection();
				int nStocks = 0;
				if ((strProdName.equals(""))||
					(strCategory.equals(""))||
					(strSubtype.equals(""))||
					 fPrice == 0){
					MessageBox msg = new MessageBox(shlEditProduct, SWT.ICON_ERROR | SWT.OK);
					msg.setText("Error");
					msg.setMessage("Required fields have no input.");
					int buttonID = msg.open();
//					String valString = "SWT.OK";
					switch (buttonID){
					case SWT.NO:
						break;
					}
					if (strProdName.equals("")){
						lblErrProdName.setForeground(SWTResourceManager.getColor(SWT.COLOR_RED));
					}
					if(strCategory.equals("")){
						lblErrCat.setForeground(SWTResourceManager.getColor(SWT.COLOR_RED));
					}
					if (strSubtype.equals("")){
						lblErrSub.setForeground(SWTResourceManager.getColor(SWT.COLOR_RED));
					}
					
					if(fPrice == 0){
						lblErrPri.setForeground(SWTResourceManager.getColor(SWT.COLOR_RED));
					}
				}
				else{
					MessageBox messageBox = new MessageBox(shlEditProduct, SWT.ICON_QUESTION
				            | SWT.YES | SWT.NO);
					messageBox.setMessage("Are you sure you want to edit this product?");
			        messageBox.setText("Confirm Edit");
			        int response = messageBox.open();
			        if (response == SWT.YES){
			        	saveProduct(strProdName, strCategory, strSubtype, strBrand, strPackaging, fPrice, nStocks);
						MessageBox msg = new MessageBox(shlEditProduct, SWT.ICON_INFORMATION | SWT.OK);
						lblErrProdName.setForeground(SWTResourceManager.getColor(SWT.COLOR_INFO_BACKGROUND));
						lblErrCat.setForeground(SWTResourceManager.getColor(SWT.COLOR_INFO_BACKGROUND));
						lblErrSub.setForeground(SWTResourceManager.getColor(SWT.COLOR_INFO_BACKGROUND));
						lblErrPri.setForeground(SWTResourceManager.getColor(SWT.COLOR_INFO_BACKGROUND));
						msg.setText("Success!");
						msg.setMessage("Product was edited successfully!");
						int buttonID = msg.open();
						switch (buttonID){
						case SWT.OK:
							txtProdName.setText("");
							cmbCategory.setText("");
							cmbSubtype.setText("");
							txtBrand.setText("");
							txtPackaging.setText("");
							spinPrice.setSelection(0);
							shlEditProduct.close(); //please check if it's ok!
						}
			        }
				}
				
			}
		});
	}
	
	protected void saveProduct(String prodName, String prodCategory, String prodSubtype,
								String prodBrand, String prodPackaging, float prodPrice, int nStocks){			
		Product modProduct = new Product(prodName, prodCategory, prodSubtype, prodBrand, prodPackaging, prodPrice, nStocks);
		try{
			ProductManager.editProduct(modProduct);
//			System.out.println("Product edited successfully! (show this on message as well)");
		}
		catch(Exception ex){
			ex.printStackTrace();
		}
	}
}